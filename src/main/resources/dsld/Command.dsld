package dsld;

import org.codehaus.groovy.ast.expr.ClosureExpression

def enclosedBy(String name) {
	return enclosingCallName(name) & enclosingClosure()
}

// can't use 'sourceFolderOfCurrentFile("src/main/scripts") | sourceFolderOfCurrentFile("src/test/scripts")
// until https://jira.codehaus.org/browse/GRECLIPSE-1609 is fixed
def directorScript = enclosingScript() & sourceFolderOfCurrentFile("src/main/scripts")

def directorCall = enclosedBy("director")

def unitsFromRepositoryCall = enclosedBy("unitsFromRepository") | enclosedBy("unitsFromRepositoryNamed")

def installCall = enclosedBy("install")

def uninstallCall = enclosedBy("uninstall")

def iuCall = enclosedBy("installableUnit")

//contribute(directorScript & bind(enclosingClosures: enclosingClosure())) {
//	log "contribution for pointcut 'directorScript & enclosingClosure()'"
//	log "${enclosingClosures.size()} closure(s) enclose the current location:"
//	enclosingClosures.each { ClosureExpression enclosingClosure ->
//		log "${enclosingClosure.getCode().text}"
//	}
//}

contribute(directorScript & ~enclosingClosure()) {
	log "contribution for pointcut '~enclosingClosure()'"
	method(
		name: "configFrom",
		declaringType: "org.nineworthies.eclipse.command.EclipseArguments",
		params: [configPath: String],
		noParens: true)
	method(
		name: "include",
		declaringType: "org.nineworthies.eclipse.command.EclipseArguments",
		params: [eclipseArgsPath: String],
		noParens: true)
	method(
		name: "eclipsec",
		declaringType: "org.nineworthies.eclipse.command.EclipseArguments",
		params: [path: String],
		noParens: true)
	method(
		name: "consolelog",
		declaringType: "org.nineworthies.eclipse.command.EclipseArguments")
	method(
		name: "debug",
		declaringType: "org.nineworthies.eclipse.command.EclipseArguments")
	method(
		name: "nosplash",
		declaringType: "org.nineworthies.eclipse.command.EclipseArguments")
	method(
		name: "director",
		declaringType: "org.nineworthies.eclipse.command.EclipseArguments",
		params: [directorArgs: Closure])
}

contribute(directorScript & directorCall & ~unitsFromRepositoryCall & ~installCall & ~uninstallCall & ~iuCall) {
	log "contribution for pointcut 'directorCall & ~unitsFromRepositoryCall & ~installCall & ~uninstallCall & ~iuCall'"
	setDelegateType("org.nineworthies.eclipse.command.director.DirectorArgumentsHandler")
	method(
		name: "destination",
		declaringType: "org.nineworthies.eclipse.command.director.DirectorArgumentsHandler",
		params: [path: String],
		noParens: true)
	method(
		name: "repository",
		declaringType: "org.nineworthies.eclipse.command.director.DirectorArgumentsHandler",
		params: [url: String],
		noParens: true)
	method(
		name: "repositoryNamed",
		declaringType: "org.nineworthies.eclipse.command.director.DirectorArgumentsHandler",
		params: [name: String, url: String])
	method(
		name: "listUnits",
		declaringType: "org.nineworthies.eclipse.command.director.DirectorArgumentsHandler")
	method(
		name: "install",
		declaringType: "org.nineworthies.eclipse.command.director.DirectorArgumentsHandler",
		params: [installArgs: Closure])
	method(
		name: "installUnits",
		declaringType: "org.nineworthies.eclipse.command.director.DirectorArgumentsHandler")
	method(
		name: "uninstall",
		declaringType: "org.nineworthies.eclipse.command.director.DirectorArgumentsHandler",
		params: [uninstallArgs: Closure])
	method(
		name: "uninstallUnits",
		declaringType: "org.nineworthies.eclipse.command.director.DirectorArgumentsHandler")
}

contribute(directorScript & (directorCall | installCall) & ~uninstallCall & ~unitsFromRepositoryCall & ~iuCall) {
	log "contribution for pointcut '(directorCall | installCall) & ~uninstallCall & ~unitsFromRepositoryCall & ~iuCall'"
	method(
		name: "unitsFromRepository",
		declaringType: "org.nineworthies.eclipse.command.director.InstallableUnitsFromRepositoryHandler",
		params: [url: String, repositoryArgs: Closure])
	method(
		name: "unitsFromRepositoryNamed",
		declaringType: "org.nineworthies.eclipse.command.director.InstallableUnitsFromRepositoryHandler",
		params: [name: String, repositoryArgs: Closure])
}

contribute(directorScript & (installCall | uninstallCall) & ~unitsFromRepositoryCall & ~iuCall) {
	log "contribution for pointcut '(installCall | uninstallCall) & ~unitsFromRepositoryCall & ~iuCall'"
	method(
		name: "unitsFrom",
		declaringType: "org.nineworthies.eclipse.command.director.InstallableUnitsFromArgumentsHandler",
		params: [eclipseArgsPath: String],
		noParens: true)
}

contribute(directorScript & unitsFromRepositoryCall & ~iuCall) {
	log "contribution for pointcut 'unitsFromRepositoryCall & ~iuCall'"
	setDelegateType("org.nineworthies.eclipse.command.director.InstallableUnitsHandler")
}

contribute(directorScript & installCall & ~unitsFromRepositoryCall & ~iuCall) {
	log "contribution for pointcut 'installCall & ~unitsFromRepositoryCall & ~iuCall'"
	setDelegateType("org.nineworthies.eclipse.command.director.InstallArgumentsHandler")
}

contribute(directorScript & uninstallCall & ~unitsFromRepositoryCall & ~iuCall) {
	log "contribution for pointcut 'uninstallCall & ~unitsFromRepositoryCall & ~iuCall'"
	setDelegateType("org.nineworthies.eclipse.command.director.UninstallArgumentsHandler")
}

contribute(directorScript & (uninstallCall | unitsFromRepositoryCall) & ~iuCall) {
	log "contribution for pointcut '(uninstallCall | unitsFromRepositoryCall) & ~iuCall'"
	method(
		name: "installableUnit",
		declaringType: "org.nineworthies.eclipse.command.director.InstallableUnitsHandler",
		params: [installableUnitArgs: Closure])
}

contribute(directorScript & iuCall) {
	log "contribution for pointcut 'iuCall'"
	setDelegateType("org.nineworthies.eclipse.command.director.InstallableUnit")
	method(
		name: "id",
		declaringType: "org.nineworthies.eclipse.command.director.InstallableUnit",
		params: [id: String],
		noParens: true)
	method(
		name: "version",
		declaringType: "org.nineworthies.eclipse.command.director.InstallableUnit",
		params: [version: String],
		noParens: true)
}